[{"D:\\React\\annisamalik\\src\\pages\\Home.tsx":"1","D:\\React\\annisamalik\\src\\Navbar.tsx":"2","D:\\React\\annisamalik\\src\\components\\typewriter.tsx":"3","D:\\React\\annisamalik\\src\\components\\malik.tsx":"4","D:\\React\\annisamalik\\src\\components\\cvButton.tsx":"5","D:\\React\\annisamalik\\src\\components\\icon.tsx":"6","D:\\React\\annisamalik\\src\\serviceWorker.ts":"7","D:\\React\\annisamalik\\src\\pages\\About.tsx":"8","D:\\React\\annisamalik\\src\\pages\\Contact.tsx":"9","D:\\React\\annisamalik\\src\\styles\\theme.tsx":"10","D:\\React\\annisamalik\\src\\reportWebVitals.ts":"11","D:\\React\\annisamalik\\src\\pages\\Projects.tsx":"12","D:\\React\\annisamalik\\src\\index.tsx":"13","D:\\React\\annisamalik\\src\\App.tsx":"14","D:\\React\\annisamalik\\src\\components\\SocialButton.tsx":"15","D:\\React\\annisamalik\\src\\pages\\Footer.tsx":"16","D:\\React\\annisamalik\\src\\components\\Typewriter.tsx":"17","D:\\React\\annisamalik\\src\\ColorModeSwitcher.tsx":"18","D:\\React\\annisamalik\\src\\styles\\font-face.tsx":"19","D:\\React\\annisamalik\\src\\components\\WorkExperience.tsx":"20"},{"size":6059,"mtime":1612035727215,"results":"21","hashOfConfig":"22"},{"size":2815,"mtime":1611416959834,"results":"23","hashOfConfig":"22"},{"size":2805,"mtime":1610536804737,"results":"24","hashOfConfig":"25"},{"size":2054,"mtime":1610559626381,"results":"26","hashOfConfig":"22"},{"size":1288,"mtime":1610388437526,"results":"27","hashOfConfig":"22"},{"size":1396,"mtime":1611993730624,"results":"28","hashOfConfig":"22"},{"size":5258,"mtime":1610132263921,"results":"29","hashOfConfig":"22"},{"size":8841,"mtime":1610708028021,"results":"30","hashOfConfig":"22"},{"size":4789,"mtime":1612349694592,"results":"31","hashOfConfig":"22"},{"size":3161,"mtime":1610522531020,"results":"32","hashOfConfig":"22"},{"size":416,"mtime":1610132263921,"results":"33","hashOfConfig":"22"},{"size":4558,"mtime":1612350100713,"results":"34","hashOfConfig":"22"},{"size":1012,"mtime":1610172222461,"results":"35","hashOfConfig":"22"},{"size":503,"mtime":1610559599226,"results":"36","hashOfConfig":"22"},{"size":2426,"mtime":1610533887588,"results":"37","hashOfConfig":"25"},{"size":1101,"mtime":1610559289088,"results":"38","hashOfConfig":"22"},{"size":2805,"mtime":1610537007916,"results":"39","hashOfConfig":"22"},{"size":743,"mtime":1610178864228,"results":"40","hashOfConfig":"22"},{"size":14415,"mtime":1610162809746,"results":"41","hashOfConfig":"22"},{"size":2903,"mtime":1610631605508,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"1wosfk4",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"199p3m4",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"D:\\React\\annisamalik\\src\\pages\\Home.tsx",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Flex,\r\n  Spacer,\r\n  Text,\r\n  Link,\r\n  Box,\r\n  useColorMode,\r\n  useColorModeValue,\r\n  ChakraProvider,\r\n  VStack,\r\n  Code,\r\n  Grid,\r\n  theme,\r\n  Button,\r\n  ColorModeScript,\r\n  ColorMode,\r\n  Image,\r\n  HStack,\r\n  Center,\r\n  GridItem,\r\n  Divider,\r\n  Wrap,\r\n} from \"@chakra-ui/react\";\r\nimport themes from \"../styles/theme\";\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\n//import { GrSend } from 'react-icons/fa';\r\nimport linkedinRect from \"@iconify/icons-brandico/linkedin-rect\";\r\nimport twitterBird from \"@iconify-icons/brandico/twitter-bird\";\r\nimport bloggerRect from \"@iconify-icons/brandico/blogger-rect\";\r\nimport gmailIcon from \"@iconify-icons/cib/gmail\";\r\nimport githubIcon from \"@iconify-icons/cib/github\";\r\nimport mediumM from \"@iconify-icons/cib/medium-m\";\r\nimport instagramIcon from \"@iconify-icons/cib/instagram\";\r\n\r\nimport grid from \"../styles/images/grid.png\";\r\nimport foto from \"../styles/images/me.jpg\";\r\nimport tape from \"../styles/images/tape.png\";\r\nimport flower from \"../styles/images/dry-flower.png\";\r\nimport Typewriter from \"../components/Typewriter\";\r\nimport { Malik } from \"../components/malik\";\r\nimport { CVButton } from \"../components/cvButton\";\r\nimport { CustomBox } from \"../components/icon\";\r\n\r\nexport const Home: React.FC = () => {\r\n  const bg = useColorModeValue(\"white\", themes.colors.d_brown);\r\n  const color = useColorModeValue(themes.colors.d_brown, \"white\");\r\n  const [hover, setHover] = useState(false);\r\n\r\n  return (\r\n    <Center\r\n      bgColor={bg}\r\n      bgImage={`url(${grid})`}\r\n      backgroundRepeat=\"repeat\"\r\n      css={{ \"background-blend-mode\": \"multiply\" }}\r\n      height={window.innerHeight}\r\n    >\r\n      <Wrap>\r\n        <Box textAlign=\"center\" width=\"800px\">\r\n          <Image\r\n            src={foto}\r\n            alt=\"Annisa Malik\"\r\n            height={350}\r\n            zIndex={0}\r\n            borderRadius=\"15px\"\r\n            position=\"absolute\"\r\n            mt={(window.innerHeight - 350 - 56) / 2}\r\n          />\r\n          <Image\r\n            src={tape}\r\n            alt=\"tape\"\r\n            height={73}\r\n            zIndex={1}\r\n            position=\"absolute\"\r\n            mt={(window.innerHeight - 73 - 56) / 2}\r\n            ml=\"-120px\"\r\n            transform=\"rotate(-82.45deg)\"\r\n          />\r\n          <Image\r\n            src={flower}\r\n            alt=\"tape\"\r\n            height={530}\r\n            zIndex={1}\r\n            position=\"absolute\"\r\n            mt={(window.innerHeight - 530 - 56) / 2}\r\n            ml=\"630px\"\r\n          />\r\n\r\n          <VStack spacing={8}>\r\n            <Grid\r\n              zIndex={2}\r\n              w=\"500px\"\r\n              ml=\"230px\"\r\n              templateColumns=\"repeat(4, 1fr)\"\r\n              gap={4}\r\n            >\r\n              <GridItem rowSpan={1} colSpan={4}>\r\n                <VStack align=\"left\" spacing={0}>\r\n                  <Text\r\n                    align=\"left\"\r\n                    fontFamily={themes.fonts.quicksand}\r\n                    fontSize=\"36px\"\r\n                  >\r\n                    Hello there,\r\n                  </Text>\r\n                  <Malik></Malik>\r\n\r\n                  <Typewriter\r\n                    inputStrings={[\r\n                      \"Front End Developer\",\r\n                      \"I am Creative.\",\r\n                      \"I Love Design.\",\r\n                      \"I Love to Develop.\",\r\n                    ]}\r\n                  />\r\n                </VStack>\r\n              </GridItem>\r\n              <Box colSpan={1}>\r\n                <Divider mt=\"20px\" />\r\n              </Box>\r\n              <GridItem colSpan={3}>\r\n                <VStack align=\"left\" spacing={6} textAlign=\"left\">\r\n                  <p>\r\n                    <a\r\n                      style={{\r\n                        textAlign: \"left\",\r\n                        fontFamily: `${themes.fonts.quicksand}`,\r\n                        fontSize: \"16px\",\r\n                        flex: \"1\",\r\n                        lineHeight: \"1.2\",\r\n                        backgroundImage:\r\n                          \"linear-gradient(to right, #FFF0DA 0, #FFF0DA 100%)\",\r\n                        backgroundPosition: \"0 0.2em\",\r\n                        backgroundSize: \"0 100%\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                        transition: \"background .5s\",\r\n                        boxShadow: \"inset 0 -.5em 0 0 white\",\r\n                        ...(hover && { backgroundSize: \"100% 100%\" }),\r\n                      }}\r\n                      onMouseEnter={() => {\r\n                        setHover(true);\r\n                      }}\r\n                      onMouseLeave={() => {\r\n                        setHover(false);\r\n                      }}\r\n                    >\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                      Etiam ornare, dui ac commodo accumsan, justo purus feugiat\r\n                      ex, sit amet feugiat lectus sem dictum risus. Proin a orci\r\n                      a dolor convallis gravida.\r\n                    </a>\r\n                  </p>\r\n                  <HStack spacing={5}>\r\n                    <CustomBox label=\"Mail Me!\">\r\n                      <Icon icon={gmailIcon} />\r\n                    </CustomBox>\r\n                    <CustomBox label=\"Linked In\">\r\n                      <Icon icon={linkedinRect} />\r\n                    </CustomBox>\r\n                    <CustomBox label=\"Code Resp\">\r\n                      <Icon icon={githubIcon} />\r\n                    </CustomBox>\r\n                    <CustomBox label=\"\">\r\n                      <Icon icon={twitterBird} />\r\n                    </CustomBox>\r\n                    <CustomBox label=\"Social\">\r\n                      <Icon icon={instagramIcon} />\r\n                    </CustomBox>\r\n                  </HStack>\r\n                  <Spacer></Spacer>\r\n                  <CVButton></CVButton>\r\n                </VStack>\r\n              </GridItem>\r\n            </Grid>\r\n          </VStack>\r\n        </Box>\r\n      </Wrap>\r\n    </Center>\r\n  );\r\n};\r\n",["110","111"],"D:\\React\\annisamalik\\src\\Navbar.tsx",["112","113","114"],"import * as React from \"react\";\r\nimport {\r\n  Flex,\r\n  Spacer,\r\n  Text,\r\n  Box,\r\n  useColorModeValue,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\nimport codeFilled from \"@iconify/icons-ant-design/code-filled\";\r\nimport themes from \"./styles/theme\";\r\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\r\nimport menu from \"./styles/images/menu-on.png\";\r\nimport \"./styles/main.css\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { About } from \"./pages/About\";\r\nimport { Projects } from \"./pages/Projects\";\r\nimport { Contact } from \"./pages/Contact\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n  page: string;\r\n}\r\nconst NavLinks = ({ children, page, ...props }: IProps) => (\r\n  <Link {...props}>{children}</Link>\r\n);\r\n\r\nexport const Navbar: React.FC = () => {\r\n  const bg = useColorModeValue(\"white\", themes.colors.d_brown);\r\n  const color = useColorModeValue(themes.colors.d_brown, \"white\");\r\n\r\n  return (\r\n    <Router>\r\n      <Flex\r\n        zIndex={5}\r\n        pos=\"sticky\"\r\n        as=\"nav\"\r\n        bg={bg}\r\n        w=\"100%\"\r\n        top={0}\r\n        px={5}\r\n        py={2}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Flex flexDirection=\"row\" justifyContent=\"left\" alignItems=\"center\">\r\n          <Icon icon={codeFilled} style={{ color: color, fontSize: \"30px\" }} />\r\n          <Text pl={1} color={color} fontFamily={themes.fonts.abril}>\r\n            annisamalik\r\n          </Text>\r\n        </Flex>\r\n        <Box ml={5}>\r\n          <NavLink\r\n            activeClassName=\"navigationActive\"\r\n            className=\"navigation\"\r\n            to=\"/\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n          <NavLink\r\n            activeClassName=\"navigationActive\"\r\n            className=\"navigation\"\r\n            to=\"/about\"\r\n          >\r\n            About\r\n          </NavLink>\r\n          <NavLink\r\n            activeClassName=\"navigationActive\"\r\n            className=\"navigation\"\r\n            to=\"/projects\"\r\n          >\r\n            Projects\r\n          </NavLink>\r\n          <NavLink\r\n            activeClassName=\"navigationActive\"\r\n            className=\"navigation\"\r\n            to=\"/contact\"\r\n          >\r\n            Contact Me\r\n          </NavLink>\r\n        </Box>\r\n        <Spacer />\r\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\r\n      </Flex>\r\n\r\n      <Switch>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Projects />\r\n        </Route>\r\n        <Route path=\"/contact\">\r\n          <Contact />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n",["115","116"],"D:\\React\\annisamalik\\src\\components\\typewriter.tsx",["117"],"D:\\React\\annisamalik\\src\\components\\malik.tsx",["118"],"D:\\React\\annisamalik\\src\\components\\cvButton.tsx",[],"D:\\React\\annisamalik\\src\\components\\icon.tsx",[],"D:\\React\\annisamalik\\src\\serviceWorker.ts",[],"D:\\React\\annisamalik\\src\\pages\\About.tsx",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import * as React from \"react\";\r\nimport {\r\n  Wrap,\r\n  Text,\r\n  Link,\r\n  Box,\r\n  useColorMode,\r\n  useColorModeValue,\r\n  ChakraProvider,\r\n  VStack,\r\n  Code,\r\n  Grid,\r\n  theme,\r\n  Button,\r\n  ColorModeScript,\r\n  ColorMode,\r\n  Image,\r\n  HStack,\r\n  Center,\r\n  GridItem,\r\n  Stack,\r\n  Divider,\r\n  StackDivider,\r\n  Tag,\r\n  Tab,\r\n  Tabs,\r\n  TabPanels,\r\n  TabPanel,\r\n  TabList,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport themes from \"../styles/theme\";\r\nimport { WorkExp } from \"../components/WorkExperience\";\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\nimport universityIcon from \"@iconify/icons-map/university\";\r\nimport codeReview16 from \"@iconify/icons-octicon/code-review-16\";\r\nimport baselineWork from \"@iconify/icons-ic/baseline-work\";\r\nimport organizationIcon from \"@iconify-icons/codicon/organization\";\r\nimport workshopIcon from \"@iconify-icons/grommet-icons/workshop\";\r\nimport journalCode from \"@iconify-icons/bi/journal-code\";\r\nimport eventsIcon from \"@iconify-icons/carbon/events\";\r\n\r\nimport s1 from \"../styles/images/S1.jpg\";\r\nimport vutura from \"../styles/images/vutura.jpg\";\r\nimport \"../styles/main.css\";\r\n\r\n//<Icon icon={workshopIcon} /> <Icon icon={organizationIcon} /> <Icon icon={journalCode} /> <Icon icon={eventsIcon} />\r\n\r\nexport const About: React.FC = () => {\r\n  const bg = useColorModeValue(\"white\", themes.colors.d_brown);\r\n  const color = useColorModeValue(themes.colors.d_brown, \"white\");\r\n  const works = [\r\n    [\r\n      \"img/vutura.jpg\",\r\n      \"Vutura.io\",\r\n      \"https://vutura.io/\",\r\n      \"June 2020 - July 2020\",\r\n      \"AI Engineer Intern\",\r\n      \"desc\",\r\n    ] as string[],\r\n    [\r\n      \"img/vutura.jpg\",\r\n      \"Vutura.io\",\r\n      \"https://vutura.io/\",\r\n      \"June 2020 - July 2020\",\r\n      \"AI Engineer Intern\",\r\n      \"desc\",\r\n    ] as string[],\r\n  ];\r\n  const colleagues = [\r\n    [[\"person Name\", \"jabatan\", \"linkedin\", \"picture\"]],\r\n    [[\"person Name\", \"jabatan\", \"linkedin\", \"picture\"]],\r\n  ];\r\n\r\n  return (\r\n    <ChakraProvider theme={themes}>\r\n      <Center backgroundColor={themes.colors.creame}>\r\n        <Tabs\r\n          variant=\"unstyled\"\r\n          orientation=\"vertical\"\r\n          width={window.innerWidth * 0.72}\r\n          defaultIndex={0}\r\n          zIndex={1}\r\n          padding=\"90px 0 90px 0\"\r\n        >\r\n          <TabList width=\"400px\">\r\n            <Text\r\n              fontSize=\"36px\"\r\n              textAlign=\"left\"\r\n              fontFamily={themes.fonts.abril}\r\n              color={themes.colors.l_brown}\r\n              mt=\"65px\"\r\n              mb={5}\r\n            >\r\n              About\r\n            </Text>\r\n            <VStack align=\"left\" spacing={7}>\r\n              <Tab>\r\n                <Icon\r\n                  icon={universityIcon}\r\n                  style={{ fontSize: \"24px\", marginRight: \"10px\" }}\r\n                />\r\n                Education\r\n              </Tab>\r\n              <Tab>\r\n                <Icon\r\n                  icon={baselineWork}\r\n                  style={{ fontSize: \"24px\", marginRight: \"10px\" }}\r\n                />\r\n                Work Experience\r\n              </Tab>\r\n              <Tab>\r\n                <Icon\r\n                  icon={codeReview16}\r\n                  style={{ fontSize: \"24px\", marginRight: \"10px\" }}\r\n                />\r\n                Skills\r\n              </Tab>\r\n            </VStack>\r\n          </TabList>\r\n          <TabPanels\r\n            borderLeft=\"1px\"\r\n            p=\"58px 20px 58px 20px\"\r\n            ml=\"25px\"\r\n            borderColor={themes.colors.d_brown}\r\n          >\r\n            <TabPanel>\r\n              <VStack\r\n                fontFamily={themes.fonts.lato}\r\n                color={themes.colors.d_brown}\r\n                fontSize={16}\r\n                textAlign=\"left\"\r\n                align=\"left\"\r\n                spacing={5}\r\n              >\r\n                <HStack>\r\n                  <Image\r\n                    src={s1}\r\n                    alt=\"Telkom University\"\r\n                    height=\"105px\"\r\n                    width=\"105px\"\r\n                    border=\"3px solid rgba(77, 42, 23, 0.6)\"\r\n                    boxSizing=\"border-box\"\r\n                    borderRadius=\"50%\"\r\n                    ml={2}\r\n                    mr={2}\r\n                  />\r\n                  <HStack>\r\n                    <VStack textAlign=\"left\" align=\"left\" w=\"45%\">\r\n                      <Text as=\"b\" color={themes.colors.dark_brown}>\r\n                        Telkom University\r\n                      </Text>\r\n                      <Text>July 2017 – March 2021</Text>\r\n                      <Text>GPA: 3.89/4.0</Text>\r\n                    </VStack>\r\n                    <VStack textAlign=\"left\" align=\"left\">\r\n                      <HStack mt={-2}>\r\n                        <Text as=\"b\" color={themes.colors.dark_brown}>\r\n                          Bachelor Thesis\r\n                        </Text>\r\n                        <Button height={19} fontSize={12}>\r\n                          DETAILS\r\n                        </Button>\r\n                      </HStack>\r\n                      <Text as=\"i\">\r\n                        “Aspect term-polarity co-extraction in beauty products”\r\n                      </Text>\r\n                    </VStack>\r\n                  </HStack>\r\n                </HStack>\r\n                <Text textAlign={\"justify\"}>\r\n                  Taking concentration in expertise group of Intelligence,\r\n                  Computing, and Multimedia. Specifically, in Machine\r\n                  Intelligence. My coursework has provided me with a strong\r\n                  foundation of analytical thinking and algorithm. During my\r\n                  time as a student, I have spent my time in organization and\r\n                  community to build my soft skill.\r\n                </Text>\r\n                <Text as=\"b\" color={themes.colors.dark_brown}>\r\n                  Elective Courses\r\n                </Text>\r\n                <Stack\r\n                  display=\"flex\"\r\n                  flexWrap=\"wrap\"\r\n                  direction={[\"column\", \"row\"]}\r\n                  justifyContent=\"flex-start\"\r\n                  alignContent=\"flex-start\"\r\n                  spacing={0}\r\n                >\r\n                  <Button>Data Mining</Button>\r\n                  <Button>Natural Language Processing</Button>\r\n                  <Button>Recommendation System</Button>\r\n                  <Button>Data Visualization</Button>\r\n                </Stack>\r\n                <Text as=\"b\" textAlign=\"left\" color={themes.colors.dark_brown}>\r\n                  What I did in University\r\n                </Text>\r\n\r\n                <HStack\r\n                  fontFamily={themes.fonts.quicksand}\r\n                  fontSize={12}\r\n                  as=\"b\"\r\n                  align=\"left\"\r\n                  spacing={10}\r\n                >\r\n                  <VStack align=\"center\">\r\n                    <Center className=\"story\">\r\n                      <Icon icon={organizationIcon} />\r\n                    </Center>\r\n                    <Text>Organization</Text>\r\n                  </VStack>\r\n                  <VStack>\r\n                    <Center>\r\n                      <div className=\"story\">XP</div>\r\n                    </Center>\r\n                    <Text>Experience</Text>\r\n                  </VStack>\r\n                  <VStack>\r\n                    <Center className=\"story\">\r\n                      <Icon icon={workshopIcon} />\r\n                    </Center>\r\n                    <Text>Workshop</Text>\r\n                  </VStack>\r\n                  <VStack align=\"center\">\r\n                    <Center className=\"story\">\r\n                      <Icon icon={eventsIcon} align=\"center\" />\r\n                    </Center>\r\n                    <Text>Seminar</Text>\r\n                  </VStack>\r\n                  <VStack>\r\n                    <Center className=\"story\">\r\n                      <Icon icon={journalCode} />{\" \"}\r\n                    </Center>\r\n                    <Text>Scool Work</Text>\r\n                  </VStack>\r\n                </HStack>\r\n              </VStack>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <VStack\r\n                fontFamily={themes.fonts.lato}\r\n                color={themes.colors.d_brown}\r\n                fontSize={16}\r\n                textAlign=\"left\"\r\n                align=\"left\"\r\n                spacing={5}\r\n              >\r\n                {Array(works.length)\r\n                  .fill(\"\")\r\n                  .map((_, i) => (\r\n                    <WorkExp\r\n                      workHistory={works[i] as string[]}\r\n                      colleagues={colleagues[i] as string[][]}\r\n                    ></WorkExp>\r\n                  ))}\r\n              </VStack>\r\n            </TabPanel>\r\n            <TabPanel>2020</TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Center>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n",["137","138"],"D:\\React\\annisamalik\\src\\pages\\Contact.tsx",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"D:\\React\\annisamalik\\src\\styles\\theme.tsx",["155"],"import { mode } from \"@chakra-ui/theme-tools\";\r\nimport { extendTheme } from \"@chakra-ui/react\";\r\nimport { isWhiteSpaceLike } from \"typescript\";\r\n\r\nconst colors = {\r\n  light_green: \"#97F9C4\",\r\n  dark_green: \"#4AD0A0\",\r\n  dark_brown: \"#4D2A17\",\r\n  d_brown: \"#A4713C\",\r\n  light_brown: \"#BD8A3D\",\r\n  l_brown: \"#D9AB66\",\r\n  creame: \"#FFF0DA\",\r\n  creameContact: \"#FFF9F0\",\r\n  l_br1: \"#F4E2C8\",\r\n  l_br2: \"#DFC195\",\r\n  l_br3: \"#EDD6B5\",\r\n  dark_gray: \"#C4C4C4\",\r\n  light_gray: \"#E5E5E5\",\r\n  white: \"#FFFFFF\",\r\n};\r\n\r\nconst fonts = {\r\n  body: \"'My Body Font', sans-serif\",\r\n  heading: \"'My Heading Font', sans-serif\",\r\n  mono: \"'My Monospaced Font', monospace\",\r\n  abril: \"'Abril Fatface', cursive\",\r\n  quicksand: \"'Quicksand', sans-serif\",\r\n  architect: \"'Architects Daughter', cursive\",\r\n  lato: \"'Lato', sans-serif\",\r\n};\r\n\r\nconst styles = {\r\n  global: (props: String) => ({\r\n    body: {\r\n      color: mode(\"gray.800\", \"whiteAlpha.900\")(props),\r\n      backgroundImage: \"url('/images/grid.png')\",\r\n      backgroundRepeat: \"repeat\",\r\n      //bg: mode(colors.white, colors.d_brown)(props),\r\n    },\r\n    Navbar: {\r\n      bg: mode(colors.white, colors.d_brown)(props),\r\n    },\r\n  }),\r\n};\r\n\r\nconst components = {\r\n  FormLabel: {\r\n    baseStyle: {\r\n      fontFamily: fonts.architect,\r\n      color: colors.dark_brown,\r\n    },\r\n  },\r\n  Tabs: {\r\n    // style object for base or default style\r\n    baseStyle: {\r\n      tab: {\r\n        _selected: { color: colors.light_brown },\r\n        justifyContent: \"flex-start\",\r\n        fontSize: \"18px\",\r\n        color: \"rgba(189,138,61,.5)\",\r\n        fontFamily: fonts.quicksand,\r\n      },\r\n    },\r\n    // styles for different sizes (\"sm\", \"md\", \"lg\")\r\n    sizes: {},\r\n    // styles for different visual variants (\"outline\", \"solid\")\r\n    variants: {},\r\n    // default values for `size` and `variant`\r\n    defaultProps: {\r\n      size: \"\",\r\n      variant: \"\",\r\n    },\r\n  },\r\n  Drawer: {\r\n    // setup light/dark mode component defaults\r\n    baseStyle: (props: String) => ({\r\n      dialog: {\r\n        bg: mode(\"white\", \"#141214\")(props),\r\n      },\r\n    }),\r\n  },\r\n  Button: {\r\n    // 1. We can update the base styles\r\n    baseStyle: {\r\n      fontWeight: \"bold\", // Normally, it is \"semibold\"\r\n      //bgGradient: \"linear(to-tr, #4AD0A0, #97F9C4)\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n      boxShadow: \"0px 3px 3px rgba(151, 249, 196, 0.5)\",\r\n    },\r\n    // 2. We can add a new button size or extend existing\r\n    sizes: {\r\n      xl: {\r\n        h: \"56px\",\r\n        fontSize: \"lg\",\r\n        px: \"32px\",\r\n      },\r\n    },\r\n    // 3. We can add a new visual variant\r\n    variants: {\r\n      \"with-shadow\": {\r\n        bg: \"black\",\r\n        boxShadow: \"0 0 2px 2px #efdfde\",\r\n      },\r\n      // 4. We can override existing variants\r\n      solid: (props: String) => ({\r\n        bgGradient: mode(\r\n          \"linear(to-tr, #4AD0A0, #97F9C4)\",\r\n          \"linear(to-tr, #4AD0A0, #fff)\"\r\n        )(props),\r\n      }),\r\n    },\r\n  },\r\n};\r\n\r\nconst config = {\r\n  useSystemColorMode: false,\r\n  initialColorMode: \"light\",\r\n};\r\n\r\nconst theme = extendTheme({\r\n  components,\r\n  styles,\r\n  fonts,\r\n  colors,\r\n  config,\r\n});\r\n\r\nexport default theme;\r\n","D:\\React\\annisamalik\\src\\reportWebVitals.ts",[],["156","157"],"D:\\React\\annisamalik\\src\\pages\\Projects.tsx",["158","159","160","161","162","163","164","165","166","167","168","169"],"D:\\React\\annisamalik\\src\\index.tsx",[],"D:\\React\\annisamalik\\src\\App.tsx",[],"D:\\React\\annisamalik\\src\\components\\SocialButton.tsx",["170"],"import React from \"react\";\r\nimport {\r\n  SlideFade,\r\n  Box,\r\n  VStack,\r\n  Grid,\r\n  GridItem,\r\n  Text,\r\n  keyframes,\r\n  Center,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport themes from \"../styles/theme\";\r\nimport { Icon } from \"@iconify/react\";\r\n\r\ninterface IconifyIcon {\r\n  body: string;\r\n  left?: number;\r\n  top?: number;\r\n  width?: number;\r\n  height?: number;\r\n  rotate?: number;\r\n  hFlip?: boolean;\r\n  vFlip?: boolean;\r\n}\r\n\r\ninterface IProps {\r\n  socialMedia: (string | IconifyIcon)[];\r\n}\r\n\r\nexport const SocialButton = ({ socialMedia }: IProps) => {\r\n  const pulse = keyframes`\r\n  0% { transform: scale(.95); } \r\n  50% { transform: scale(1); box-shadow: 0 0 0 20px rgba(51, 249, 196, 0);  }\r\n  100% { transform: scale(.95); box-shadow: 0 0 0 0 rgba(51, 249, 196, 0); }`;\r\n\r\n  return (\r\n    <SlideFade in={true} offsetY=\"20px\">\r\n      <Link>\r\n        <Box\r\n          width=\"100%\"\r\n          bgColor={themes.colors.l_br1}\r\n          borderRadius={15}\r\n          border=\"2px solid\"\r\n          p=\"10px\"\r\n          borderColor={themes.colors.light_green}\r\n          _hover={{\r\n            transform: \"translateX(20px)\",\r\n          }}\r\n        >\r\n          <Grid\r\n            templateRows=\"repeat(1, 1fr)\"\r\n            templateColumns=\"repeat(3, 1fr)\"\r\n            gap={4}\r\n          >\r\n            <GridItem colSpan={2}>\r\n              <VStack textAlign=\"left\" align=\"left\">\r\n                <Text\r\n                  fontSize={25}\r\n                  fontFamily={themes.fonts.abril}\r\n                  color=\"white\"\r\n                  mb={-2}\r\n                  mt={-2}\r\n                >\r\n                  {\" \"}\r\n                  {socialMedia[0]}\r\n                </Text>\r\n                <Text\r\n                  fontSize={12}\r\n                  fontFamily={themes.fonts.quicksand}\r\n                  color={themes.colors.dark_green}\r\n                >\r\n                  {socialMedia[1]}\r\n                </Text>\r\n              </VStack>\r\n            </GridItem>\r\n            <GridItem colSpan={1}>\r\n              <Center>\r\n                <Icon\r\n                  icon={socialMedia[2] as IconifyIcon}\r\n                  style={{\r\n                    color: themes.colors.l_br2,\r\n                    fontSize: 36,\r\n                    display: \"inline\",\r\n                  }}\r\n                />\r\n              </Center>\r\n            </GridItem>\r\n          </Grid>\r\n        </Box>\r\n      </Link>\r\n    </SlideFade>\r\n  );\r\n};\r\n","D:\\React\\annisamalik\\src\\pages\\Footer.tsx",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import * as React from \"react\";\r\nimport {\r\n  Flex,\r\n  Spacer,\r\n  Text,\r\n  Link,\r\n  Box,\r\n  useColorMode,\r\n  useColorModeValue,\r\n  ChakraProvider,\r\n  VStack,\r\n  Code,\r\n  Grid,\r\n  theme,\r\n  Button,\r\n  ColorModeScript,\r\n  ColorMode,\r\n  Image,\r\n  HStack,\r\n  Center,\r\n  GridItem,\r\n  Divider,\r\n  Badge,\r\n} from \"@chakra-ui/react\";\r\nimport themes from \"../styles/theme\";\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\nimport codeFilled from \"@iconify/icons-ant-design/code-filled\";\r\n\r\nexport const Footer: React.FC = () => {\r\n  const bg = useColorModeValue(\"white\", themes.colors.d_brown);\r\n  const color = useColorModeValue(themes.colors.d_brown, \"white\");\r\n\r\n  return (\r\n    <ChakraProvider theme={themes}>\r\n      <Center bgColor={bg} color={color} padding={10}>\r\n        <HStack>\r\n          <Text fontStyle={themes.fonts.quicksand}>© 2020</Text>\r\n          <Icon icon={codeFilled} style={{ color: color, fontSize: \"30px\" }} />\r\n          <Text pl={1} fontFamily={themes.fonts.abril}>\r\n            annisamalik\r\n          </Text>\r\n        </HStack>\r\n      </Center>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n","D:\\React\\annisamalik\\src\\components\\Typewriter.tsx",["188"],"import React from \"react\";\r\nimport { Wrap, Text, keyframes } from \"@chakra-ui/react\";\r\nimport themes from \"../styles/theme\";\r\n\r\ninterface Props {\r\n  inputStrings: Array<String>;\r\n}\r\ninterface State {\r\n  typeColor: {\r\n    color: string;\r\n  };\r\n  typed: String;\r\n  isDeleting: boolean;\r\n  loopNum: number;\r\n}\r\n\r\nexport default class Typewriter extends React.Component<Props, State> {\r\n  state = {\r\n    typeColor: {\r\n      color: \"#A4713C\",\r\n    },\r\n    typed: \"\",\r\n    loopNum: 0,\r\n    isDeleting: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.typeWriter(this.props.inputStrings);\r\n  }\r\n\r\n  stringChecker(string: String) {\r\n    if (\r\n      string === \"Creative.\" ||\r\n      string === \"Develop.\" ||\r\n      string === \"Design.\"\r\n    ) {\r\n      this.setState({\r\n        typeColor: { color: \"#4AD0A0\" },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        typeColor: { color: \"#A4713C\" },\r\n      });\r\n    }\r\n  }\r\n\r\n  typeWriter(sentences: Array<String>) {\r\n    var i = this.state.loopNum % sentences.length;\r\n    var sentence = sentences[i];\r\n\r\n    let currentHuruf = this.state.typed.length;\r\n\r\n    let kata = sentence.split(\" \");\r\n    let j = [];\r\n    let sum = 0;\r\n    for (let k = 0; k < kata.length; k++) {\r\n      if (sum > 0) j.push(sum);\r\n      if (k != kata.length - 1) sum = kata[k].length + sum + 1;\r\n      else sum = kata[k].length + sum;\r\n    }\r\n    let k = 0;\r\n    while (currentHuruf > j[k]) {\r\n      k++;\r\n    }\r\n    this.stringChecker(kata[k]);\r\n\r\n    if (this.state.isDeleting) {\r\n      this.setState((state, props) => ({\r\n        typed: sentence.substring(0, state.typed.length - 1),\r\n      }));\r\n    } else {\r\n      this.setState((state, props) => ({\r\n        typed: sentence.substring(0, state.typed.length + 1),\r\n      }));\r\n    }\r\n\r\n    var delta = 300 - Math.random() * 100;\r\n\r\n    if (this.state.isDeleting) {\r\n      delta /= 2;\r\n    }\r\n\r\n    if (!this.state.isDeleting && this.state.typed === sentence) {\r\n      this.setState(() => ({ isDeleting: true }));\r\n    } else if (this.state.isDeleting && this.state.typed === \"\") {\r\n      this.setState(() => ({ isDeleting: false }));\r\n      this.setState((state) => ({ loopNum: state.loopNum + 1 }));\r\n    }\r\n\r\n    setTimeout(() => this.typeWriter(sentences), delta);\r\n  }\r\n\r\n  render() {\r\n    const blink = keyframes`\r\n    0%{opacity: 0;}\r\n\t  100%{opacity: 1;}\r\n`;\r\n    return (\r\n      <Wrap>\r\n        <span style={this.state.typeColor}>\r\n          <Text\r\n            align=\"left\"\r\n            fontFamily={themes.fonts.quicksand}\r\n            fontSize=\"26px\"\r\n            ml={1}\r\n            _after={{\r\n              content: `\"|\"`,\r\n              animation: `${blink} 500ms linear infinite alternate`,\r\n            }}\r\n          >\r\n            {this.state.typed}\r\n          </Text>\r\n        </span>\r\n      </Wrap>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\annisamalik\\src\\ColorModeSwitcher.tsx",[],"D:\\React\\annisamalik\\src\\styles\\font-face.tsx",["189"],"D:\\React\\annisamalik\\src\\components\\WorkExperience.tsx",["190","191","192"],"import React from \"react\";\r\nimport {\r\n  SlideFade,\r\n  Box,\r\n  VStack,\r\n  HStack,\r\n  Image,\r\n  Text,\r\n  keyframes,\r\n  Center,\r\n  Button,\r\n  Link,\r\n  Collapse,\r\n} from \"@chakra-ui/react\";\r\nimport themes from \"../styles/theme\";\r\nimport { Icon } from \"@iconify/react\";\r\n\r\ninterface IProps {\r\n  workHistory: string[];\r\n  colleagues: string[][];\r\n}\r\n\r\nexport const WorkExp = ({ workHistory, colleagues }: IProps) => {\r\n  const pulse = keyframes`\r\n  0% { transform: scale(.95); } \r\n  50% { transform: scale(1); box-shadow: 0 0 0 20px rgba(51, 249, 196, 0);  }\r\n  100% { transform: scale(.95); box-shadow: 0 0 0 0 rgba(51, 249, 196, 0); }`;\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  const handleToggle = () => setShow(!show);\r\n\r\n  return (\r\n    <SlideFade in={true} offsetY=\"20px\">\r\n      <Box\r\n        bgColor=\"white\"\r\n        borderRadius={20}\r\n        p={3}\r\n        position=\"relative\"\r\n        _before={{\r\n          content: `\"◄\"`,\r\n          color: \"white\",\r\n          position: \"absolute\",\r\n          top: \"50\",\r\n          left: \"-12px\",\r\n        }}\r\n      >\r\n        <Collapse startingHeight={100} in={show}>\r\n          <HStack alignItems=\"flex-start\">\r\n            <Image\r\n              src={process.env.PUBLIC_URL + `${workHistory[0]}`}\r\n              alt=\"Vutura.io\"\r\n              height=\"72px\"\r\n              width=\"72px\"\r\n              border=\"3px solid rgba(77, 42, 23, 0.6)\"\r\n              boxSizing=\"border-box\"\r\n              borderRadius=\"50%\"\r\n              ml={2}\r\n              mr={2}\r\n            />\r\n            <VStack textAlign=\"left\" align=\"left\" justifyContent=\"flex-start\">\r\n              <Text as=\"b\" color={themes.colors.dark_brown}>\r\n                {workHistory[1]}\r\n              </Text>\r\n              <Text>{workHistory[3]}</Text>\r\n              <Text>{workHistory[4]}</Text>\r\n              <Text>\r\n                Anim pariatur cliche reprehenderit, enim eiusmod high life\r\n                accusamus terry richardson ad squid. Nihil anim keffiyeh\r\n                helvetica, craft beer labore wes anderson cred nesciunt sapiente\r\n                ea proident. Anim pariatur cliche reprehenderit, enim eiusmod\r\n                high life accusamus terry richardson ad squid. Nihil anim\r\n                keffiyeh helvetica, craft beer labore wes anderson cred nesciunt\r\n                sapiente ea proident. Anim pariatur cliche reprehenderit, enim\r\n                eiusmod high life accusamus terry richardson ad squid. Nihil\r\n                anim keffiyeh helvetica, craft beer labore wes anderson cred\r\n                nesciunt sapiente ea proident.\r\n              </Text>\r\n            </VStack>\r\n          </HStack>\r\n        </Collapse>\r\n        <Center>\r\n          <Button size=\"sm\" onClick={handleToggle} height={19} fontSize={12}>\r\n            {show ? \"Close\" : \"Details\"}\r\n          </Button>\r\n        </Center>\r\n      </Box>\r\n    </SlideFade>\r\n  );\r\n};\r\n",{"ruleId":"193","severity":1,"message":"194","line":1,"column":27,"nodeType":"195","messageId":"196","endLine":1,"endColumn":33},{"ruleId":"193","severity":1,"message":"197","line":3,"column":3,"nodeType":"195","messageId":"196","endLine":3,"endColumn":7},{"ruleId":"193","severity":1,"message":"198","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":7},{"ruleId":"193","severity":1,"message":"199","line":8,"column":3,"nodeType":"195","messageId":"196","endLine":8,"endColumn":15},{"ruleId":"193","severity":1,"message":"200","line":10,"column":3,"nodeType":"195","messageId":"196","endLine":10,"endColumn":17},{"ruleId":"193","severity":1,"message":"201","line":12,"column":3,"nodeType":"195","messageId":"196","endLine":12,"endColumn":7},{"ruleId":"193","severity":1,"message":"202","line":14,"column":3,"nodeType":"195","messageId":"196","endLine":14,"endColumn":8},{"ruleId":"193","severity":1,"message":"203","line":15,"column":3,"nodeType":"195","messageId":"196","endLine":15,"endColumn":9},{"ruleId":"193","severity":1,"message":"204","line":16,"column":3,"nodeType":"195","messageId":"196","endLine":16,"endColumn":18},{"ruleId":"193","severity":1,"message":"205","line":17,"column":3,"nodeType":"195","messageId":"196","endLine":17,"endColumn":12},{"ruleId":"193","severity":1,"message":"206","line":26,"column":16,"nodeType":"195","messageId":"196","endLine":26,"endColumn":26},{"ruleId":"193","severity":1,"message":"207","line":30,"column":8,"nodeType":"195","messageId":"196","endLine":30,"endColumn":19},{"ruleId":"193","severity":1,"message":"208","line":33,"column":8,"nodeType":"195","messageId":"196","endLine":33,"endColumn":15},{"ruleId":"193","severity":1,"message":"209","line":47,"column":9,"nodeType":"195","messageId":"196","endLine":47,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":124,"column":21,"nodeType":"212","endLine":146,"endColumn":22},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"193","severity":1,"message":"206","line":10,"column":16,"nodeType":"195","messageId":"196","endLine":10,"endColumn":26},{"ruleId":"193","severity":1,"message":"217","line":14,"column":8,"nodeType":"195","messageId":"196","endLine":14,"endColumn":12},{"ruleId":"193","severity":1,"message":"218","line":32,"column":7,"nodeType":"195","messageId":"196","endLine":32,"endColumn":15},{"ruleId":"213","replacedBy":"219"},{"ruleId":"215","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":58,"column":13,"nodeType":"223","messageId":"224","endLine":58,"endColumn":15},{"ruleId":"193","severity":1,"message":"225","line":5,"column":9,"nodeType":"195","messageId":"196","endLine":5,"endColumn":19},{"ruleId":"193","severity":1,"message":"226","line":3,"column":3,"nodeType":"195","messageId":"196","endLine":3,"endColumn":7},{"ruleId":"193","severity":1,"message":"198","line":5,"column":3,"nodeType":"195","messageId":"196","endLine":5,"endColumn":7},{"ruleId":"193","severity":1,"message":"227","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":6},{"ruleId":"193","severity":1,"message":"199","line":7,"column":3,"nodeType":"195","messageId":"196","endLine":7,"endColumn":15},{"ruleId":"193","severity":1,"message":"201","line":11,"column":3,"nodeType":"195","messageId":"196","endLine":11,"endColumn":7},{"ruleId":"193","severity":1,"message":"228","line":12,"column":3,"nodeType":"195","messageId":"196","endLine":12,"endColumn":7},{"ruleId":"193","severity":1,"message":"202","line":13,"column":3,"nodeType":"195","messageId":"196","endLine":13,"endColumn":8},{"ruleId":"193","severity":1,"message":"204","line":15,"column":3,"nodeType":"195","messageId":"196","endLine":15,"endColumn":18},{"ruleId":"193","severity":1,"message":"205","line":16,"column":3,"nodeType":"195","messageId":"196","endLine":16,"endColumn":12},{"ruleId":"193","severity":1,"message":"229","line":20,"column":3,"nodeType":"195","messageId":"196","endLine":20,"endColumn":11},{"ruleId":"193","severity":1,"message":"230","line":22,"column":3,"nodeType":"195","messageId":"196","endLine":22,"endColumn":10},{"ruleId":"193","severity":1,"message":"231","line":23,"column":3,"nodeType":"195","messageId":"196","endLine":23,"endColumn":15},{"ruleId":"193","severity":1,"message":"232","line":24,"column":3,"nodeType":"195","messageId":"196","endLine":24,"endColumn":6},{"ruleId":"193","severity":1,"message":"233","line":30,"column":3,"nodeType":"195","messageId":"196","endLine":30,"endColumn":9},{"ruleId":"193","severity":1,"message":"206","line":34,"column":16,"nodeType":"195","messageId":"196","endLine":34,"endColumn":26},{"ruleId":"193","severity":1,"message":"234","line":44,"column":8,"nodeType":"195","messageId":"196","endLine":44,"endColumn":14},{"ruleId":"193","severity":1,"message":"235","line":50,"column":9,"nodeType":"195","messageId":"196","endLine":50,"endColumn":11},{"ruleId":"193","severity":1,"message":"209","line":51,"column":9,"nodeType":"195","messageId":"196","endLine":51,"endColumn":14},{"ruleId":"213","replacedBy":"236"},{"ruleId":"215","replacedBy":"237"},{"ruleId":"193","severity":1,"message":"197","line":3,"column":3,"nodeType":"195","messageId":"196","endLine":3,"endColumn":7},{"ruleId":"193","severity":1,"message":"198","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":7},{"ruleId":"193","severity":1,"message":"199","line":8,"column":3,"nodeType":"195","messageId":"196","endLine":8,"endColumn":15},{"ruleId":"193","severity":1,"message":"201","line":12,"column":3,"nodeType":"195","messageId":"196","endLine":12,"endColumn":7},{"ruleId":"193","severity":1,"message":"228","line":13,"column":3,"nodeType":"195","messageId":"196","endLine":13,"endColumn":7},{"ruleId":"193","severity":1,"message":"202","line":14,"column":3,"nodeType":"195","messageId":"196","endLine":14,"endColumn":8},{"ruleId":"193","severity":1,"message":"204","line":16,"column":3,"nodeType":"195","messageId":"196","endLine":16,"endColumn":18},{"ruleId":"193","severity":1,"message":"205","line":17,"column":3,"nodeType":"195","messageId":"196","endLine":17,"endColumn":12},{"ruleId":"193","severity":1,"message":"238","line":18,"column":3,"nodeType":"195","messageId":"196","endLine":18,"endColumn":8},{"ruleId":"193","severity":1,"message":"229","line":21,"column":3,"nodeType":"195","messageId":"196","endLine":21,"endColumn":11},{"ruleId":"193","severity":1,"message":"230","line":22,"column":3,"nodeType":"195","messageId":"196","endLine":22,"endColumn":10},{"ruleId":"193","severity":1,"message":"239","line":27,"column":3,"nodeType":"195","messageId":"196","endLine":27,"endColumn":19},{"ruleId":"193","severity":1,"message":"240","line":28,"column":3,"nodeType":"195","messageId":"196","endLine":28,"endColumn":17},{"ruleId":"193","severity":1,"message":"241","line":38,"column":10,"nodeType":"195","messageId":"196","endLine":38,"endColumn":22},{"ruleId":"193","severity":1,"message":"235","line":54,"column":9,"nodeType":"195","messageId":"196","endLine":54,"endColumn":11},{"ruleId":"193","severity":1,"message":"209","line":55,"column":9,"nodeType":"195","messageId":"196","endLine":55,"endColumn":14},{"ruleId":"193","severity":1,"message":"242","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":26},{"ruleId":"213","replacedBy":"243"},{"ruleId":"215","replacedBy":"244"},{"ruleId":"193","severity":1,"message":"198","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":7},{"ruleId":"193","severity":1,"message":"199","line":8,"column":3,"nodeType":"195","messageId":"196","endLine":8,"endColumn":15},{"ruleId":"193","severity":1,"message":"245","line":11,"column":3,"nodeType":"195","messageId":"196","endLine":11,"endColumn":9},{"ruleId":"193","severity":1,"message":"201","line":12,"column":3,"nodeType":"195","messageId":"196","endLine":12,"endColumn":7},{"ruleId":"193","severity":1,"message":"228","line":13,"column":3,"nodeType":"195","messageId":"196","endLine":13,"endColumn":7},{"ruleId":"193","severity":1,"message":"202","line":14,"column":3,"nodeType":"195","messageId":"196","endLine":14,"endColumn":8},{"ruleId":"193","severity":1,"message":"204","line":16,"column":3,"nodeType":"195","messageId":"196","endLine":16,"endColumn":18},{"ruleId":"193","severity":1,"message":"205","line":17,"column":3,"nodeType":"195","messageId":"196","endLine":17,"endColumn":12},{"ruleId":"193","severity":1,"message":"229","line":21,"column":3,"nodeType":"195","messageId":"196","endLine":21,"endColumn":11},{"ruleId":"193","severity":1,"message":"230","line":22,"column":3,"nodeType":"195","messageId":"196","endLine":22,"endColumn":10},{"ruleId":"193","severity":1,"message":"246","line":24,"column":3,"nodeType":"195","messageId":"196","endLine":24,"endColumn":8},{"ruleId":"193","severity":1,"message":"209","line":111,"column":9,"nodeType":"195","messageId":"196","endLine":111,"endColumn":14},{"ruleId":"193","severity":1,"message":"247","line":32,"column":9,"nodeType":"195","messageId":"196","endLine":32,"endColumn":14},{"ruleId":"193","severity":1,"message":"197","line":3,"column":3,"nodeType":"195","messageId":"196","endLine":3,"endColumn":7},{"ruleId":"193","severity":1,"message":"233","line":4,"column":3,"nodeType":"195","messageId":"196","endLine":4,"endColumn":9},{"ruleId":"193","severity":1,"message":"198","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":7},{"ruleId":"193","severity":1,"message":"227","line":7,"column":3,"nodeType":"195","messageId":"196","endLine":7,"endColumn":6},{"ruleId":"193","severity":1,"message":"199","line":8,"column":3,"nodeType":"195","messageId":"196","endLine":8,"endColumn":15},{"ruleId":"193","severity":1,"message":"245","line":11,"column":3,"nodeType":"195","messageId":"196","endLine":11,"endColumn":9},{"ruleId":"193","severity":1,"message":"201","line":12,"column":3,"nodeType":"195","messageId":"196","endLine":12,"endColumn":7},{"ruleId":"193","severity":1,"message":"228","line":13,"column":3,"nodeType":"195","messageId":"196","endLine":13,"endColumn":7},{"ruleId":"193","severity":1,"message":"202","line":14,"column":3,"nodeType":"195","messageId":"196","endLine":14,"endColumn":8},{"ruleId":"193","severity":1,"message":"203","line":15,"column":3,"nodeType":"195","messageId":"196","endLine":15,"endColumn":9},{"ruleId":"193","severity":1,"message":"204","line":16,"column":3,"nodeType":"195","messageId":"196","endLine":16,"endColumn":18},{"ruleId":"193","severity":1,"message":"205","line":17,"column":3,"nodeType":"195","messageId":"196","endLine":17,"endColumn":12},{"ruleId":"193","severity":1,"message":"238","line":18,"column":3,"nodeType":"195","messageId":"196","endLine":18,"endColumn":8},{"ruleId":"193","severity":1,"message":"229","line":21,"column":3,"nodeType":"195","messageId":"196","endLine":21,"endColumn":11},{"ruleId":"193","severity":1,"message":"230","line":22,"column":3,"nodeType":"195","messageId":"196","endLine":22,"endColumn":10},{"ruleId":"193","severity":1,"message":"246","line":23,"column":3,"nodeType":"195","messageId":"196","endLine":23,"endColumn":8},{"ruleId":"193","severity":1,"message":"206","line":26,"column":16,"nodeType":"195","messageId":"196","endLine":26,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":58,"column":13,"nodeType":"223","messageId":"224","endLine":58,"endColumn":15},{"ruleId":"248","severity":1,"message":"249","line":1,"column":1,"nodeType":"250","endLine":345,"endColumn":5},{"ruleId":"193","severity":1,"message":"198","line":12,"column":3,"nodeType":"195","messageId":"196","endLine":12,"endColumn":7},{"ruleId":"193","severity":1,"message":"251","line":16,"column":10,"nodeType":"195","messageId":"196","endLine":16,"endColumn":14},{"ruleId":"193","severity":1,"message":"247","line":24,"column":9,"nodeType":"195","messageId":"196","endLine":24,"endColumn":14},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Flex' is defined but never used.","'Link' is defined but never used.","'useColorMode' is defined but never used.","'ChakraProvider' is defined but never used.","'Code' is defined but never used.","'theme' is defined but never used.","'Button' is defined but never used.","'ColorModeScript' is defined but never used.","'ColorMode' is defined but never used.","'InlineIcon' is defined but never used.","'bloggerRect' is defined but never used.","'mediumM' is defined but never used.","'color' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["252"],"no-negated-in-lhs",["253"],"'menu' is defined but never used.","'NavLinks' is assigned a value but never used.",["252"],["253"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'shadowText' is assigned a value but never used.","'Wrap' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'Divider' is defined but never used.","'StackDivider' is defined but never used.","'Tag' is defined but never used.","'Spacer' is defined but never used.","'vutura' is defined but never used.","'bg' is assigned a value but never used.",["252"],["253"],"'Image' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'SocialButton' is defined but never used.","'isWhiteSpaceLike' is defined but never used.",["252"],["253"],"'VStack' is defined but never used.","'Badge' is defined but never used.","'pulse' is assigned a value but never used.","import/no-anonymous-default-export","Assign literal to a variable before exporting as module default","ExportDefaultDeclaration","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation"]